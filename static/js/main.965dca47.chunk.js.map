{"version":3,"sources":["components/CreateRoom/img.svg","components/CreateRoom/CreateRoom.js","components/Control/Tool.js","components/Control/Color.js","components/WhiteBoard/WhiteBoard.js","components/SlideBar/SlideBar.js","components/SlideBar/SlideBarMn.js","components/Footer/Footer.js","components/Room/Room.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","padding","border","marginTop","borderBottom","button","marginRight","input","inputN","marginBottom","CreateRoom","props","useState","name","setName","roomID","setRoomID","time","setTime","date","setDate","open","setOpen","guidGenerator","S","n","Math","random","toString","replace","substr","useEffect","secTimer","setInterval","moment","format","locale","clearInterval","classes","Fragment","Box","height","p","display","alignItems","justifyContent","color","size","className","IconButton","Grid","container","item","md","lg","noValidate","autoComplete","TextField","id","label","variant","value","onChange","e","target","Button","startIcon","component","onClick","setTimeout","history","push","pathname","state","disabled","flexDirection","src","img","Backdrop","sx","zIndex","drawer","CircularProgress","Tool","tool","setTool","setFile","openDiaglog","setOpenDiaglog","active","handleClose","style","backgroundColor","type","accept","URL","createObjectURL","files","htmlFor","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","Color","params","setColor","WhiteBoard","timer","expanded","socket","canvasRef","useRef","parentRef","ctx","setCtx","drawing","setDrawing","x","y","canvasOffset","setCanvasOffset","width","canvas","setCanvas","positionp","setPositionp","start","setStart","file","textX","setTextX","textY","setTextY","textStart","setTextStart","imgData","setImgData","recentWords","setRecentWords","undoList","setUndoList","saveState","current","toDataURL","getCanvasCoordinates","event","clientX","clientY","paste","putImageData","drawPen","position","beginPath","moveTo","lineTo","stroke","draw","drawLine","rect","drawRect","coordinates","angle","radius","sqrt","pow","index","cos","sin","PI","closePath","drawTriangle","arc","drawCircle","lineWidth","strokeStyle","canv","offsetWidth","offsetHeight","canvCtx","getContext","lineJoin","lineCap","offset","getBoundingClientRect","parseInt","left","top","on","image","interval","Image","onload","clearRect","scale","min","drawImage","emit","onKeyDown","keyCode","pop","length","undo","recentWord","measureText","font","fillStyle","fillText","key","document","addEventListener","removeEventListener","clearTimeout","ref","onMouseDown","getImageData","onMouseUp","onMouseMove","pngUrl","mousex","mousey","content","flexGrow","minHeight","overflowY","chatHeader","fontSize","chatBody","boxSizing","flex","chatFooter","marginLeft","form","borderRadius","boxShadow","iconButton","action","author","fontWeight","message","whiteSpace","wordWrap","textAlign","alert","SlideBar","setExpanded","userName","chat","setChat","setNewM","setMessage","messageList","setMessageList","handleSend","msg","data","list","Card","CardHeader","titleTypographyProps","title","CardContent","Alert","icon","severity","map","m","Paper","InputBase","placeholder","onKeyPress","overflowX","SlideBarMn","people","setPeople","setCount","userList","setUserList","List","ListItem","ListItemAvatar","round","textSizeRatio","ListItemText","primary","customBadge","customBadgeMn","Footer","newM","count","Date","toLocaleTimeString","window","location","href","Badge","badge","badgeContent","io","connect","TransitionUp","Slide","direction","Room","match","setmessage","sendername","Snackbar","anchorOrigin","vertical","horizontal","TransitionComponent","autoHideDuration","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.965dca47.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/img.d08c12d9.svg\";","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box, Grid, Button, TextField, IconButton } from '@material-ui/core';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { BiChalkboard } from \"react-icons/bi\";\r\nimport { IoLogoFacebook, IoLogoGithub, IoFlowerOutline } from \"react-icons/io5\";\r\nimport { FaChalkboardTeacher } from \"react-icons/fa\";\r\nimport moment from 'moment';\r\nimport 'moment/locale/vi';\r\nimport './CreateRoom.css';\r\nimport img from './img.svg';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n\r\n    padding: {\r\n        padding: \"1em 3em\"\r\n    },\r\n\r\n    border: {\r\n        marginTop: 30,\r\n        borderBottom: \"solid 1px #dadce0\"\r\n    },\r\n\r\n    button: {\r\n        marginRight: 20,\r\n        padding: \"13px 20px\"\r\n    },\r\n\r\n    input: {\r\n        marginRight: 20\r\n    },\r\n\r\n    inputN: {\r\n        marginBottom: 20\r\n    }\r\n}));\r\n\r\nfunction CreateRoom(props) {\r\n    const [name, setName] = useState(\"\");\r\n    const [roomID, setRoomID] = useState(\"\");\r\n    const [time, setTime] = useState(\"\");\r\n    const [date, setDate] = useState(\"\");\r\n    const [open, setOpen] = useState(false)\r\n\r\n    function guidGenerator() {\r\n        var S = function (n) {\r\n            return (Math.random().toString(36).replace(/[^a-z]+/g, '').substr(1, n));\r\n        };\r\n        return (S(3) + \"-\" + S(4) + \"-\" + S(3));\r\n    }\r\n    useEffect(() => {\r\n        let secTimer = setInterval(() => {\r\n            setTime(moment().format('H:mm'))\r\n            setDate(moment().locale('vi').format('ddd, Do MMM'))\r\n        }, 1000)\r\n\r\n        return () => clearInterval(secTimer);\r\n    }, [])\r\n\r\n    const handleClickCreate = () => {\r\n        if (name !== \"\") {\r\n            setOpen(true)\r\n            setTimeout(() => {\r\n                props.history.push({\r\n                    pathname: '/' + guidGenerator(),\r\n                    state: {\r\n                        name: name\r\n                    }\r\n                });\r\n            }, 2000);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const handleClickJoin = () => {\r\n        if (name !== \"\") {\r\n            setOpen(true)\r\n            setTimeout(() => {\r\n                props.history.push({\r\n                    pathname: '/' + roomID,\r\n                    state: {\r\n                        name: name\r\n                    }\r\n                });\r\n            }, 2000);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const hanldeInputChange = (e) => {\r\n        setRoomID(e.target.value);\r\n    }\r\n\r\n    const handleInputName = (e) => {\r\n        setName(e.target.value);\r\n    }\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <React.Fragment>\r\n            <Box height={70} p={3} display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                    <FaChalkboardTeacher color=\"lightslategrey\" size={40} />\r\n                    <div className=\"logo\"><span>Xau</span> WhiteBoard</div>\r\n                </Box>\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                    <div className=\"time\">{time} • {date}</div>\r\n                    <IconButton>\r\n                        <IoLogoFacebook color=\"royalblue\" />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <IoLogoGithub color=\"black\" />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <IoFlowerOutline />\r\n                    </IconButton>\r\n                </Box>\r\n            </Box>\r\n            <Box display=\"flex\" alignItems=\"center\" height=\"80vh\">\r\n                <Grid container alignItems=\"center\">\r\n                    <Grid className={classes.padding} item md={12} lg={6}>\r\n                        <div className=\"title-1\">Bảng trắng cộng tác cho mọi người</div>\r\n                        <div className=\"title-2\">Kết nối, chia sẻ ý tưởng trên Xau WhiteBoard</div>\r\n                        <Box display=\"flex\">\r\n                            <form noValidate autoComplete=\"off\">\r\n                                <TextField\r\n                                    className={classes.inputN}\r\n                                    id=\"outlined-basic\"\r\n                                    label=\"Nhập tên của bạn\"\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    value={name}\r\n                                    onChange={handleInputName} />\r\n                            </form>\r\n                        </Box>\r\n                        <Box display=\"flex\" alignItems=\"center\">\r\n                            <Button\r\n                                className={classes.button}\r\n                                size=\"large\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                startIcon={<BiChalkboard />}\r\n                                component=\"span\"\r\n                                onClick={handleClickCreate}>\r\n                                Tạo phòng\r\n                            </Button>\r\n                            <form noValidate autoComplete=\"off\">\r\n                                <TextField\r\n                                    className={classes.input}\r\n                                    id=\"outlined-basic\"\r\n                                    label=\"Nhập mã phòng\"\r\n                                    variant=\"outlined\"\r\n                                    value={roomID}\r\n                                    onChange={hanldeInputChange} />\r\n                            </form>\r\n\r\n                            {roomID === \"\" ?\r\n                                (<Button disabled>Tham gia</Button>) :\r\n                                (<Button color=\"primary\" onClick={handleClickJoin}>Tham gia</Button>)\r\n                            }\r\n\r\n                        </Box>\r\n                        <div className={classes.border}></div>\r\n                    </Grid>\r\n                    <Grid item md={12} lg={6}>\r\n                        <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n                            <img className=\"img\" src={img} />\r\n                            <div className=\"con\">\r\n                                <div className=\"title\">Nhận đường liên kết bạn có thể chia sẻ</div>\r\n                                <div>Nhấp vào tạo phòng để nhận đường liên kết mà bạn có thể gửi cho mọi người</div>\r\n                            </div>\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n\r\n            <Backdrop\r\n                sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n                open={open}\r\n            >\r\n                <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default CreateRoom\r\n","import React, { useState } from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { ImPencil } from \"react-icons/im\";\r\nimport { FaEraser } from \"react-icons/fa\";\r\nimport { AiOutlineClear } from \"react-icons/ai\";\r\nimport { BiSquare } from \"react-icons/bi\";\r\nimport { BsTextareaT } from \"react-icons/bs\";\r\nimport { FaSlash } from \"react-icons/fa\";\r\nimport {\r\n    IoTriangleOutline,\r\n    IoEllipseOutline,\r\n    IoImageOutline,\r\n} from \"react-icons/io5\";\r\nimport \"./Tool.css\";\r\n\r\nfunction Tool({ tool, setTool, color, setFile }) {\r\n    const [openDiaglog, setOpenDiaglog] = useState(false);\r\n\r\n    function active(value) {\r\n        return value === tool ? \"tool active\" : \"tool\";\r\n    }\r\n    const handleChangeFile = (e) => {\r\n        setFile(URL.createObjectURL(e.target.files[0]));\r\n    };\r\n\r\n    const handleClickClear = () => {\r\n        setOpenDiaglog(true)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpenDiaglog(false);\r\n    };\r\n\r\n    const handleClickOK = () => {\r\n        setTool('clear');\r\n        setOpenDiaglog(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"tools-cont\">\r\n            <div\r\n                style={tool === \"pen\" ? { backgroundColor: color } : {}}\r\n                className={active(\"pen\")}\r\n                onClick={() => setTool(\"pen\")}\r\n            >\r\n                <ImPencil size={24} />\r\n            </div>\r\n            <div className={active(\"eraser\")} onClick={() => setTool(\"eraser\")}>\r\n                <FaEraser size={24} />\r\n            </div>\r\n            <div\r\n                style={tool === \"line\" ? { backgroundColor: color } : {}}\r\n                className={active(\"line\")}\r\n                onClick={() => setTool(\"line\")}\r\n            >\r\n                <FaSlash size={20} />\r\n            </div>\r\n            <div\r\n                style={tool === \"rectangle\" ? { backgroundColor: color } : {}}\r\n                className={active(\"rectangle\")}\r\n                onClick={() => setTool(\"rectangle\")}\r\n            >\r\n                <BiSquare size={24} />\r\n            </div>\r\n            <div\r\n                style={tool === \"circle\" ? { backgroundColor: color } : {}}\r\n                className={active(\"circle\")}\r\n                onClick={() => setTool(\"circle\")}\r\n            >\r\n                <IoEllipseOutline size={24} />\r\n            </div>\r\n            <div\r\n                style={tool === \"triangle\" ? { backgroundColor: color } : {}}\r\n                className={active(\"triangle\")}\r\n                onClick={() => setTool(\"triangle\")}\r\n            >\r\n                <IoTriangleOutline size={24} />\r\n            </div>\r\n            <div className={active(\"text\")} onClick={() => setTool(\"text\")}>\r\n                <BsTextareaT size={24} />\r\n            </div>\r\n            <input\r\n                className=\"image\"\r\n                id=\"image\"\r\n                type=\"file\"\r\n                accept=\"image/* \"\r\n                onChange={handleChangeFile}\r\n            />\r\n            <label className=\"tool\" htmlFor=\"image\">\r\n                <IoImageOutline size={24} />\r\n            </label>\r\n            <div className=\"tool\" onClick={handleClickClear}>\r\n                <AiOutlineClear size={24} />\r\n            </div>\r\n            <Dialog\r\n                open={openDiaglog}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"Xoá bảng?\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Bạn có muốn xoá bảng không?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose}>Không</Button>\r\n                    <Button onClick={handleClickOK}>\r\n                        Xoá\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Tool;\r\n","import React from 'react'\r\nimport './Color.css';\r\n\r\nfunction Color(params) {\r\n\r\n    function active(value) {\r\n        return value === params.color ? \"active\" : \"\";\r\n    }\r\n\r\n    return (\r\n        <div className=\"colors-cont\">\r\n            <div\r\n                className={\"black \" + active(\"#1a1110\")}\r\n                onClick={() => params.setColor(\"#1a1110\")}\r\n            ></div>\r\n            <div\r\n                className={\"red \" + active(\"#e32636\")}\r\n                onClick={() => params.setColor(\"#e32636\")}\r\n            ></div>\r\n            <div\r\n                className={\"yellow \" + active(\"#ffdf00\")}\r\n                onClick={() => params.setColor(\"#ffdf00\")}\r\n            ></div>\r\n            <div\r\n                className={\"green \" + active(\"#0bda51\")}\r\n                onClick={() => params.setColor(\"#0bda51\")}\r\n            ></div>\r\n            <div\r\n                className={\"orange \" + active(\"#ff9f00\")}\r\n                onClick={() => params.setColor(\"#ff9f00\")}\r\n            ></div>\r\n            <div\r\n                className={\"purple \" + active(\"#bf00ff\")}\r\n                onClick={() => params.setColor(\"#bf00ff\")}\r\n            ></div>\r\n            <div\r\n                className={\"blue \" + active(\"#0892d0\")}\r\n                onClick={() => params.setColor(\"#0892d0\")}\r\n            ></div>\r\n            <div\r\n                className={\"pink \" + active(\"#ff66cc\")}\r\n                onClick={() => params.setColor(\"#ff66cc\")}\r\n            ></div>\r\n            <div\r\n                className={\"brown \" + active(\"#cd7f32\")}\r\n                onClick={() => params.setColor(\"#cd7f32\")}\r\n            ></div>\r\n            <div\r\n                className={\"grey \" + active(\"#b2beb5\")}\r\n                onClick={() => params.setColor(\"#b2beb5\")}\r\n            ></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Color\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport Box from '@mui/material/Box';\r\nimport Slider from '@mui/material/Slider';\r\nimport \"./WhiteBoard.css\";\r\nimport Tool from \"../Control/Tool\";\r\nimport Color from \"../Control/Color\";\r\n\r\nconst WhiteBoard = ({ expanded, socket }) => {\r\n    const canvasRef = useRef(null);\r\n    const parentRef = useRef(null);\r\n    const [ctx, setCtx] = useState({});\r\n    const [drawing, setDrawing] = useState(false);\r\n    const [canvasOffset, setCanvasOffset] = useState({ x: 0, y: 0 });\r\n    const [canvas, setCanvas] = useState({ width: 0, height: 0 });\r\n    const [positionp, setPositionp] = useState({ x: 0, y: 0 });\r\n    const [start, setStart] = useState({ x: 0, y: 0 });\r\n    const [color, setColor] = useState(\"#000000\");\r\n    const [tool, setTool] = useState(\"pen\");\r\n    const [file, setFile] = useState(\"\");\r\n    const [textX, setTextX] = useState(0);\r\n    const [textY, setTextY] = useState(0);\r\n    const [textStart, setTextStart] = useState(0);\r\n    const [imgData, setImgData] = useState(\"\");\r\n    const [recentWords, setRecentWords] = useState([]);\r\n    const [undoList, setUndoList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let canv = canvasRef.current;\r\n        canv.width = parentRef.current.offsetWidth;\r\n        canv.height = parentRef.current.offsetHeight;\r\n\r\n        setCanvas({\r\n            width: canv.width,\r\n            height: canv.height,\r\n        });\r\n\r\n        let canvCtx = canv.getContext(\"2d\");\r\n        canvCtx.lineJoin = \"round\";\r\n        canvCtx.lineCap = \"round\";\r\n        setCtx(canvCtx);\r\n\r\n        let offset = canv.getBoundingClientRect();\r\n        setCanvasOffset({ x: parseInt(offset.left), y: parseInt(offset.top) });\r\n        saveState();\r\n    }, [ctx]);\r\n\r\n    useEffect(() => {\r\n        socket.on(\"canvas\", (image) => {\r\n            var interval = setInterval(() => {\r\n                var canvas = canvasRef.current;\r\n                var ctx = canvas.getContext(\"2d\");\r\n                clearInterval(interval);\r\n                var img = new Image();\r\n                img.onload = function () {\r\n                    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n                    var scale = Math.min(\r\n                        canvas.width / img.width,\r\n                        canvas.height / img.height\r\n                    );\r\n                    var x = canvas.width / 2 - (img.width / 2) * scale;\r\n                    var y = canvas.height / 2 - (img.height / 2) * scale;\r\n                    ctx.drawImage(img, x, y, img.width * scale, img.height * scale);\r\n                };\r\n                img.src = image;\r\n            }, 200);\r\n        });\r\n    }, [socket]);\r\n\r\n    useEffect(() => {\r\n        var image = new Image();\r\n        image.onload = function () {\r\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n            var scale = Math.min(\r\n                canvas.width / image.width,\r\n                canvas.height / image.height\r\n            );\r\n            var x = canvas.width / 2 - (image.width / 2) * scale;\r\n            var y = canvas.height / 2 - (image.height / 2) * scale;\r\n            ctx.drawImage(image, x, y, image.width * scale, image.height * scale);\r\n        };\r\n        image.src = file;\r\n        socket.emit(\"canvas\", file);\r\n    }, [file]);\r\n\r\n    useEffect(() => {\r\n        var canvas = canvasRef.current;\r\n        var ctx = canvas.getContext(\"2d\");\r\n        if (tool === \"clear\") {\r\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        } else {\r\n        }\r\n        var img = canvas.toDataURL();\r\n        socket.emit(\"canvas\", img);\r\n    }, [tool]);\r\n\r\n    function saveState() {\r\n        setUndoList((undoList) => [...undoList, canvasRef.current.toDataURL()]);\r\n    }\r\n\r\n    useEffect(() => {\r\n        function undo() {\r\n            undoList.pop();\r\n            var img = undoList[undoList.length - 1];\r\n            var image = new Image();\r\n            image.onload = function () {\r\n                ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n                ctx.drawImage(image, 0, 0);\r\n            };\r\n            image.src = img;\r\n        }\r\n        const onKeyDown = (e) => {\r\n            if (tool === \"text\") {\r\n                if (e.keyCode === 13) {\r\n                    setTextX(textStart);\r\n                    setTextY(textY + 20);\r\n                } else if (e.keyCode === 8) {\r\n                    undo();\r\n                    var recentWord = recentWords[recentWords.length - 1];\r\n                    recentWords.pop();\r\n                    setTextX(textX - ctx.measureText(recentWord).width);\r\n                } else {\r\n                    ctx.font = \"22px Arial\";\r\n                    ctx.fillStyle = color;\r\n                    ctx.fillText(e.key, textX, textY);\r\n                    setTextX(textX + ctx.measureText(e.key).width);\r\n                    setRecentWords((recentWords) => [...recentWords, e.key]);\r\n                    saveState();\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n        document.addEventListener(\"keydown\", onKeyDown);\r\n\r\n        return () => {\r\n            document.removeEventListener(\"keydown\", onKeyDown);\r\n        };\r\n    }, [textX, textY]);\r\n\r\n    \r\n    let timer;\r\n    useEffect(() => {\r\n        return () => clearTimeout(timer);\r\n    }, [timer]);\r\n\r\n    function getCanvasCoordinates(event) {\r\n        var x = event.clientX - canvasOffset.x,\r\n            y = event.clientY - canvasOffset.y;\r\n\r\n        return { x: x, y: y };\r\n    }\r\n\r\n    function copy() {\r\n        setImgData(ctx.getImageData(0, 0, canvas.width, canvas.height));\r\n    }\r\n\r\n    function paste() {\r\n        ctx.putImageData(imgData, 0, 0);\r\n    }\r\n\r\n    function drawPen(position) {\r\n        ctx.beginPath();\r\n        ctx.moveTo(position.x, position.y);\r\n        ctx.lineTo(positionp.x, positionp.y);\r\n        ctx.stroke();\r\n    }\r\n\r\n    function drawLine(position) {\r\n        ctx.beginPath();\r\n        ctx.moveTo(position.x, position.y);\r\n        ctx.lineTo(start.x, start.y);\r\n        ctx.stroke();\r\n    }\r\n\r\n    function drawRect(position) {\r\n        ctx.beginPath();\r\n        ctx.rect(\r\n            position.x,\r\n            position.y,\r\n            start.x - position.x,\r\n            start.y - position.y\r\n        );\r\n        ctx.stroke();\r\n    }\r\n\r\n    function drawTriangle(position) {\r\n        var coordinates = [],\r\n            angle = 100,\r\n            sides = 3,\r\n            radius = Math.sqrt(\r\n                Math.pow(start.x - position.x, 2) + Math.pow(start.x - position.x, 2)\r\n            ),\r\n            index = 0;\r\n\r\n        for (index = 0; index < sides; index++) {\r\n            coordinates.push({\r\n                x: start.x + radius * Math.cos(angle),\r\n                y: start.y - radius * Math.sin(angle),\r\n            });\r\n            angle += (2 * Math.PI) / sides;\r\n        }\r\n\r\n        ctx.beginPath();\r\n        ctx.moveTo(coordinates[0].x, coordinates[0].y);\r\n        for (index = 1; index < sides; index++) {\r\n            ctx.lineTo(coordinates[index].x, coordinates[index].y);\r\n        }\r\n\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n    }\r\n\r\n    function drawCircle(position) {\r\n        var radius = Math.sqrt(\r\n            Math.pow(start.x - position.x, 2) + Math.pow(start.y - position.y, 2)\r\n        );\r\n        ctx.beginPath();\r\n        ctx.arc(start.x, start.y, radius, 0, 2 * Math.PI);\r\n        ctx.stroke();\r\n    }\r\n\r\n    function draw(position) {\r\n        switch (tool) {\r\n            case \"pen\":\r\n                drawPen(position);\r\n                break;\r\n            case \"line\":\r\n                drawLine(position);\r\n                break;\r\n            case \"rectangle\":\r\n                drawRect(position);\r\n                break;\r\n            case \"triangle\":\r\n                drawTriangle(position);\r\n                break;\r\n            case \"circle\":\r\n                drawCircle(position);\r\n                break;\r\n            case \"eraser\":\r\n                ctx.lineWidth = 15;\r\n                ctx.strokeStyle = \"#ffffff\";\r\n                drawPen(position);\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n\r\n    function handleMouseDown(event) {\r\n        setDrawing(true);\r\n        setPositionp(getCanvasCoordinates(event));\r\n        setStart(getCanvasCoordinates(event));\r\n        copy();\r\n    }\r\n\r\n    function handleMouseUp(event) {\r\n        setDrawing(false);\r\n        if (tool !== \"pen\" && tool !== \"eraser\") {\r\n            paste();\r\n        }\r\n        var position = getCanvasCoordinates(event);\r\n        ctx.lineWidth = 5;\r\n        ctx.strokeStyle = color;\r\n        draw(position);\r\n        setPositionp(position);\r\n    }\r\n\r\n    function handleMouseMove(event) {\r\n        var position;\r\n        if (drawing) {\r\n            if (tool !== \"pen\" && tool !== \"eraser\") {\r\n                paste();\r\n            }\r\n            position = getCanvasCoordinates(event);\r\n            ctx.lineWidth = 5;\r\n            ctx.strokeStyle = color;\r\n            draw(position);\r\n        }\r\n        timer = setTimeout(() => {\r\n            var pngUrl = canvasRef.current.toDataURL();\r\n            socket.emit(\"canvas\", pngUrl);\r\n        }, 1000);\r\n        setPositionp(getCanvasCoordinates(event));\r\n    }\r\n\r\n    function handleMouseClick(e) {\r\n        if (tool === \"text\") {\r\n            let mousex = parseInt(e.clientX - canvasOffset.x);\r\n            let mousey = parseInt(e.clientY - canvasOffset.y);\r\n            setTextX(mousex);\r\n            setTextY(mousey);\r\n            setTextStart(mousex);\r\n\r\n            setRecentWords([]);\r\n        }\r\n    }\r\n\r\n    function setCursor() {\r\n        return tool === \"pen\" ? color.replace(\"#\", \"color\") : tool;\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {/* <Box sx={{ height: 150 }}>\r\n                <Slider\r\n                    sx={{\r\n                        '& input[type=\"range\"]': {\r\n                            WebkitAppearance: 'slider-vertical',\r\n                        },\r\n                    }}\r\n                    size=\"small\"\r\n                    orientation=\"vertical\"\r\n                    defaultValue={5}\r\n                    min={1}\r\n                    max={20}\r\n                    aria-label=\"Temperature\"\r\n                    valueLabelDisplay=\"auto\"\r\n                    // color=\"secondary\"\r\n                />\r\n            </Box> */}\r\n            <Tool color={color} tool={tool} setTool={setTool} setFile={setFile} />\r\n            <Color color={color} setColor={setColor} />\r\n            <div\r\n                className={\r\n                    expanded\r\n                        ? \"whiteboard-cont whiteboard-cont--expanded\"\r\n                        : \"whiteboard-cont\"\r\n                }\r\n                ref={parentRef}\r\n            >\r\n                <canvas\r\n                    className={setCursor()}\r\n                    ref={canvasRef}\r\n                    onMouseDown={handleMouseDown}\r\n                    onMouseUp={handleMouseUp}\r\n                    onMouseMove={handleMouseMove}\r\n                    onClick={handleMouseClick}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default WhiteBoard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardHeader, CardContent, IconButton, Paper, InputBase } from '@material-ui/core';\r\nimport Alert from '@mui/material/Alert';\r\nimport { AiOutlineSend } from \"react-icons/ai\";\r\nimport { IoCloseOutline } from \"react-icons/io5\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport './SlideBar.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n    content: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        flexGrow: 1,\r\n        minHeight: 0,\r\n        overflowY: \"auto\",\r\n        padding: 0,\r\n    },\r\n\r\n    chatHeader: {\r\n        fontSize: 15,\r\n        padding: \"10px 16px 10px 16px\"\r\n    },\r\n\r\n    chatBody: {\r\n        boxSizing: \"border-box\",\r\n        flex: 1,\r\n        width: \"100%\",\r\n        fontSize: 13,\r\n    },\r\n\r\n    chatFooter: {\r\n        flexDirection: \"row\",\r\n        display: \"flex\",\r\n        marginTop: 8,\r\n        marginLeft: 20,\r\n        marginRight: 20\r\n    },\r\n\r\n    form: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: \"100%\",\r\n        borderRadius: 25,\r\n        backgroundColor: \"#f1f3f4\",\r\n        boxShadow: \"none\",\r\n    },\r\n\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n        color: \"#202124\",\r\n        fontSize: 13\r\n    },\r\n\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    action: {\r\n        margin: \"0 -15px\",\r\n    },\r\n\r\n    author: {\r\n        fontWeight: \"bold\"\r\n    },\r\n\r\n    message: {\r\n        whiteSpace: \"pre-wrap\",\r\n        wordWrap: \"break-word\",\r\n        textAlign: \"justify\"\r\n    },\r\n\r\n    padding: {\r\n        padding: \"10px 20px\"\r\n    },\r\n\r\n    alert: {\r\n        textAlign: \"center\",\r\n        marginLeft: 20,\r\n        marginRight: 20,\r\n        padding: \"0 !important\"\r\n    }\r\n\r\n}));\r\n\r\nfunction SlideBar({ expanded, setExpanded, socket, userName, roomID, chat, setChat, setNewM }) {\r\n    const classes = useStyles();\r\n    const [message, setMessage] = useState(\"\");\r\n    const [messageList, setMessageList] = useState([]);\r\n\r\n    const handleInput = (e) => {\r\n        setMessage(e.target.value);\r\n    }\r\n\r\n    const handleSend = () => {\r\n        socket.emit(\"chat\", message, userName, roomID)\r\n        setMessage(\"\");\r\n    }\r\n\r\n    const handleKeyPress = (event) => {\r\n        if (event.key === 'Enter') {\r\n            handleSend();\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        socket.on(\"chat\", (msg, userName, time) => {\r\n            let data = {\r\n                msg: msg,\r\n                userName: userName,\r\n                time: time\r\n            }\r\n            setMessageList((list) => [...list, data]);\r\n            setNewM(true);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className={expanded && chat ? \"sidebar sidebar--expanded\" : \"sidebar\"}>\r\n            <Card className={classes.root}>\r\n                <CardHeader\r\n                    className={classes.chatHeader}\r\n                    classes={{ action: classes.action }}\r\n                    action={\r\n                        <IconButton\r\n                            className={classes.iconButton}\r\n                            onClick={() => { setExpanded(false); setChat(false) }}>\r\n                            <IoCloseOutline size={24} />\r\n                        </IconButton>\r\n                    }\r\n                    titleTypographyProps={{ variant: 'h6' }}\r\n                    title=\"Tin nhắn trong phòng\" />\r\n                <CardContent className={classes.content}>\r\n                    <Alert className={classes.alert} icon={false} severity=\"success\">Tin nhắn chỉ hiển thị với những người trong phòng</Alert>\r\n                    <div className={classes.chatBody}>\r\n                        <Scrollbars>\r\n                            {messageList.map((m) => {\r\n                                return (\r\n                                    <div className={classes.padding}>\r\n                                        <div>\r\n                                            <span className={classes.author}>\r\n                                                {m.userName === userName ? \"Bạn\" : m.userName}\r\n                                            </span>\r\n                                            <span> {m.time}</span>\r\n                                        </div>\r\n                                        <div className={classes.message}>\r\n                                            {m.msg}\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                            })}\r\n\r\n                        </Scrollbars>\r\n                    </div>\r\n                    <div className={classes.chatFooter}>\r\n                        <Paper className={classes.form}>\r\n                            <InputBase\r\n                                className={classes.input}\r\n                                placeholder=\"Gửi tin nhắn cho mọi người\"\r\n                                value={message}\r\n                                onChange={handleInput}\r\n                                onKeyPress={handleKeyPress}\r\n                            />\r\n                            <IconButton\r\n                                disabled={!message}\r\n                                type=\"submit\"\r\n                                className={classes.iconButton}\r\n                                onClick={handleSend}\r\n                            >\r\n                                <AiOutlineSend />\r\n                            </IconButton>\r\n                        </Paper>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SlideBar\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardHeader, CardContent, IconButton, List, ListItem, ListItemAvatar, ListItemText } from '@material-ui/core';\r\nimport { IoCloseOutline } from \"react-icons/io5\";\r\nimport Avatar from 'react-avatar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport './SlideBar.css';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        overflowX: \"hidden\"\r\n    },\r\n    content: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        flexGrow: 1,\r\n        minHeight: 0,\r\n        overflowY: \"auto\",\r\n        padding: 0,\r\n    },\r\n\r\n    chatHeader: {\r\n        fontSize: 15,\r\n        padding: \"10px 16px 10px 16px\"\r\n    },\r\n\r\n    chatBody: {\r\n        boxSizing: \"border-box\",\r\n        flex: 1,\r\n        width: \"100%\",\r\n        fontSize: 13,\r\n    },\r\n\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    action: {\r\n        margin: \"0 -15px\",\r\n    },\r\n\r\n\r\n    padding: {\r\n        padding: 20\r\n    }\r\n\r\n}));\r\n\r\nfunction SlideBarMn({ expanded, setExpanded, people, setPeople, socket, setCount }) {\r\n    const classes = useStyles();\r\n    const [userList, setUserList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        socket.on(\"user_list\", (data) => {\r\n            setUserList(data);\r\n            setCount(data.length);\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className={expanded && people ? \"sidebar sidebar--expanded\" : \"sidebar\"}>\r\n            <Card className={classes.root}>\r\n                <CardHeader\r\n                    className={classes.chatHeader}\r\n                    classes={{ action: classes.action }}\r\n                    action={\r\n                        <IconButton\r\n                            className={classes.iconButton}\r\n                            onClick={() => { setExpanded(false); setPeople(false) }}>\r\n                            <IoCloseOutline size={24} />\r\n                        </IconButton>\r\n                    }\r\n                    titleTypographyProps={{ variant: 'h6' }}\r\n                    title=\"Mọi người\" />\r\n                <CardContent className={classes.content}>\r\n                    <div className={classes.chatBody}>\r\n                        <Scrollbars>\r\n                            <List sx={{ width: '100%' }}>\r\n                                {userList.map((m) => {\r\n                                    return (\r\n                                        <ListItem>\r\n                                            <ListItemAvatar>\r\n                                                <Avatar name={m} round={true} size=\"42\" textSizeRatio={2} />\r\n                                            </ListItemAvatar>\r\n                                            <ListItemText primary={m} />\r\n                                        </ListItem>\r\n                                    );\r\n                                })}\r\n                            </List>\r\n                        </Scrollbars>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SlideBarMn\r\n","import React, { useState, useEffect } from 'react';\r\nimport \"./Footer.css\";\r\nimport { Badge, IconButton } from '@material-ui/core';\r\nimport { MdMessage, MdPeople, MdCallEnd } from \"react-icons/md\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport moment from 'moment';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    customBadge: {\r\n        backgroundColor: \"#8ab4f8\",\r\n        color: \"#8ab4f8\"\r\n    },\r\n    customBadgeMn: {\r\n        backgroundColor: \"#00000059\",\r\n        color: \"#ffffff\"\r\n    }\r\n}));\r\n\r\nfunction Footer({ roomID, expanded, setExpanded, chat, setChat, people, setPeople, newM, setNewM, count }) {\r\n\r\n    const [time, setTime] = useState(new Date().toLocaleTimeString());\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        let secTimer = setInterval(() => {\r\n            setTime(moment().format('H:mm'))\r\n        }, 1000)\r\n\r\n        return () => clearInterval(secTimer);\r\n    }, [])\r\n\r\n    const toggleSidebarChat = () => {\r\n        if (expanded) {\r\n            setNewM(false);\r\n            setChat(!chat);\r\n            setPeople(false);\r\n        } else {\r\n            setNewM(false);\r\n            setExpanded(!expanded);\r\n            setChat(!chat);\r\n            setPeople(false);\r\n        }\r\n    }\r\n\r\n    const toggleSidebarPeople = () => {\r\n        if (expanded) {\r\n            setPeople(!people);\r\n            setChat(false);\r\n        } else {\r\n            setExpanded(!expanded);\r\n            setPeople(!people);\r\n            setChat(false);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"footer-item\">\r\n            <div className=\"left-item\">\r\n                <div className=\"icon-block\">\r\n                    <span className=\"time-con\">\r\n                        <div className=\"time\">\r\n                            {time}\r\n                        </div>\r\n                        <div className=\"separator\"></div>\r\n                    </span>\r\n                    <div className=\"roomid\">\r\n                        {roomID}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"center-item\">\r\n                <div className=\"icon-block\" onClick={() => window.location.href = '/'}>\r\n                    <MdCallEnd size={24} />\r\n                </div>\r\n            </div>\r\n            <div className=\"right-item\">\r\n                <div className=\"icon-block\">\r\n                    <IconButton onClick={toggleSidebarPeople}>\r\n                        <Badge classes={{ badge: classes.customBadgeMn }} badgeContent={count} color=\"primary\">\r\n                            {people ?\r\n                                <MdPeople color=\"#8ab4f8\" size={24} /> :\r\n                                <MdPeople color=\"white\" size={24} />\r\n                            }\r\n                        </Badge>\r\n                    </IconButton>\r\n                    <IconButton onClick={toggleSidebarChat}>\r\n                        {chat ?\r\n                            <MdMessage color=\"#8ab4f8\" size={24} /> :\r\n                            (newM ?\r\n                                (<Badge classes={{ badge: classes.customBadge }} variant=\"dot\">\r\n                                    <MdMessage color=\"#ffffff\" size={24} />\r\n                                </Badge>) :\r\n                                (<Badge variant=\"dot\">\r\n                                    <MdMessage color=\"#ffffff\" size={24} />\r\n                                </Badge>))\r\n                        }\r\n\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React, { useState, useEffect } from 'react';\r\nimport WhiteBoard from '../WhiteBoard/WhiteBoard';\r\nimport SlideBar from '../SlideBar/SlideBar';\r\nimport SlideBarMn from '../SlideBar/SlideBarMn';\r\nimport Footer from '../Footer/Footer';\r\nimport io from 'socket.io-client';\r\nimport { Snackbar, Slide } from '@mui/material';\r\n\r\nconst socket = io.connect(\"http://localhost:2001\");\r\n\r\nfunction TransitionUp(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nfunction Room(props) {\r\n    const roomID = props.match.params.roomID;\r\n    const userName = props.location.state.name;\r\n    const [expanded, setExpanded] = useState(false);\r\n    const [chat, setChat] = useState(false);\r\n    const [people, setPeople] = useState(false);\r\n    const [message, setmessage] = useState(\"\");\r\n    const [open, setOpen] = useState(false);\r\n    const [newM, setNewM] = useState(false);\r\n    const [count, setCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (!chat && !people)\r\n            setExpanded(false);\r\n    }, [chat, people]);\r\n\r\n    useEffect(() => {\r\n        socket.emit(\"join_room\", roomID, userName);\r\n        socket.on(\"message\", (msg, sendername, time) => {\r\n            setmessage(msg);\r\n            setOpen(true);\r\n        });\r\n    }, [roomID, userName]);\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <WhiteBoard expanded={expanded} socket={socket} />\r\n            <Footer\r\n                roomID={roomID}\r\n                expanded={expanded}\r\n                setExpanded={setExpanded}\r\n                chat={chat}\r\n                setChat={setChat}\r\n                people={people}\r\n                setPeople={setPeople}\r\n                newM={newM}\r\n                setNewM={setNewM}\r\n                count={count} />\r\n            <SlideBar\r\n                chat={chat}\r\n                setChat={setChat}\r\n                expanded={expanded}\r\n                setExpanded={setExpanded}\r\n                newM={newM}\r\n                setNewM={setNewM}\r\n                socket={socket}\r\n                userName={userName}\r\n                roomID={roomID} />\r\n            <SlideBarMn\r\n                people={people}\r\n                setPeople={setPeople}\r\n                expanded={expanded}\r\n                setExpanded={setExpanded}\r\n                socket={socket}\r\n                setCount={setCount} />\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: \"bottom\",\r\n                    horizontal: \"left\",\r\n                }}\r\n                open={open}\r\n                TransitionComponent={TransitionUp}\r\n                message={message}\r\n                autoHideDuration={3000}\r\n                onClose={() => setOpen(false)}\r\n            />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Room\r\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport CreateRoom from './components/CreateRoom/CreateRoom';\nimport Room from './components/Room/Room';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" exact component={CreateRoom} />\n        <Route path=\"/:roomID\" component={Room} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}